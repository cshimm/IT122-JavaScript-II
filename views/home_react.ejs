<html>
    <head>
        <title>Classic Games</title>
        <link rel="stylesheet" href="/css/style.css">

        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

        <!-- Don't use this in production: -->
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    </head>
    <body>
        <div id="root"></div>
        <script type="text/babel">
            const games = <%- games %>;
            const App = () => {
                const [selectedGame, setSelectedGame] = React.useState();
                const [isEditingDetail, setIsEditingDetail] = React.useState(false);
                const [gamesList, setGamesList] = React.useState(games);

                const ListItems = (props) => {
                    const listItemClicked = (e) => {
                        let game = gamesList.find((g) => {
                            return `${g.title} (${g.yearReleased})` === e.target.innerText;
                        });
                        setIsEditingDetail(false);
                        setSelectedGame(game);
                    }
                    const listItems = props.games.map((g) =>
                        <li className="game" key={g.title}>
                        <a className="game-link" onClick={listItemClicked}>
                            {`${g.title}  (${g.yearReleased})`}
                        </a>
                        <a className="delete-btn" href={'/delete/' + g.title}>x</a>
                    </li>);
                        return <ul className="games"> {listItems} </ul>
                };

                const EditForm = (props) => {
                    return <form>
                        <label>
                            <input
                                type="text" name={props.target} placeholder={props.title} onChange={props.itemChanged} />
                        </label>
                    </form>;
                }
                const Details = (props) => {
                    return <div>
                        <h2>Details about {props.selectedGame.title}: </h2>
                        <div>Studio: {props.selectedGame.studio}</div>
                        <div>Genre: {props.selectedGame.genre}</div>
                        <div>Year released: { props.selectedGame.yearReleased}</div>
                        <br/>
                        <EditButton isEditing={isEditingDetail} />
                        <ClearButton />
                    </div>;
                }
                const ClearButton = () => {
                    const clearItems = () => {
                        setSelectedGame(null);
                    }
                    return <button onClick={clearItems}>Clear</button>;
                }
                const EditButton = (props) => {
                    const isValidEdit = () => {
                        const game = props.newGame;
                        return game.title !== '' &&
                            game.genre !== '' &&
                            game.studio !== '' &&
                            game.yearReleased !== '';
                    }
                    const editItems = () => {
                        setIsEditingDetail(!isEditingDetail);
                        if (isEditingDetail) {
                            if (isValidEdit()) {
                                // This line gets called when "save" is clicked
                                gamesList[gamesList.indexOf(selectedGame)] = props.newGame;
                                setGamesList(gamesList);
                                setSelectedGame(props.newGame);
                            } else {
                                setIsEditingDetail(true);
                                alert("Fields cannot be empty!");
                            }
                        }
                    }
                    return <button onClick={editItems}>{props.isEditing ? "Save" : "Edit"}</button>;
                }
                const EditDetails = (props) => {
                    const [newGame, setNewGame] = React.useState({
                        title: "",
                        genre: "",
                        studio: "",
                        yearReleased: ""
                    });
                    const itemChanged = (e) => {
                        let field = e.target.name;
                        let tempGame = {...newGame};
                        tempGame[field] = e.target.value;
                        setNewGame(tempGame);
                    }
                    return <div>
                        <h2>Details about {props.selectedGame.title}: </h2>
                        <div>Title:  <EditForm title={props.selectedGame.title} itemChanged={itemChanged} target="title" /></div>
                        <div>Studio:  <EditForm title={props.selectedGame.studio} itemChanged={itemChanged} target="studio" /></div>
                        <div>Genre:  <EditForm title={props.selectedGame.genre} itemChanged={itemChanged} target="genre" /></div>
                        <div>Year released: <EditForm title={props.selectedGame.yearReleased} itemChanged={itemChanged} target="yearReleased" /></div>
                        <br/>
                        <EditButton newGame={newGame} isEditing={isEditingDetail} />
                        <ClearButton />
                    </div>
                }
                return <div>
                    <h2>Classic Games</h2>
                    <ListItems games={gamesList} />
                    <hr/>
                    { selectedGame && (
                        isEditingDetail ? <EditDetails selectedGame={selectedGame} /> : <Details selectedGame={selectedGame} isEditing={isEditingDetail} />
                    )}
                </div>
            };
            ReactDOM.render(<App />, document.getElementById('root'));
        </script>
    </body>
</html>